
on:
  workflow_dispatch:

name: Manual Release
jobs:
    manual_release:
        runs-on: ubuntu-latest
        container:
            image: scell555/chaos-cas-steamrt:latest
        defaults:
          run:
            shell: bash
        steps:
          - name: Check out the repo
            uses: actions/checkout@v2
          - name: Prepare build dirs
            run: |
              mkdir build
              mkdir build-cross
          - name: Configure Linux
            working-directory: build
            run: CC=clang CXX=clang++ cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -GNinja -DQT_BUILD_TESTS=OFF -DQT_BUILD_EXAMPLES=OFF -DCMAKE_INSTALL_PREFIX=/opt/qt6 ..
          - name: Build Linux
            working-directory: build
            run: |
              ninja
              ninja install
          - name: Configure Windows
            working-directory: build-cross
            run: cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -GNinja -DQT_BUILD_TESTS=OFF -DQT_BUILD_EXAMPLES=OFF -DQT_FORCE_BUILD_TOOLS=ON -DCMAKE_INSTALL_PREFIX=/opt/qt6 -DQT_HOST_PATH=/opt/qt6 -DQT_QMAKE_TARGET_MKSPEC=win32-clang-msvc -DCMAKE_TOOLCHAIN_FILE=cmake/clang.toolchain.cmake ..
          - name: Build Windows
            working-directory: build-cross
            run: |
              ninja
              ninja install
          - name: Pack build output
            working-directory: /opt
            run: |
              tar cf qt6.tar /opt/qt6
              gzip qt6.tar
          - name: Build upload
            uses: actions/upload-artifact@v2.3.1
            with:
              name: build_${{ github.sha }}
              path: /opt/qt6.tar.gz
              if-no-files-found: error
          - name: Create release
            uses: softprops/action-gh-release@v1
            with:
              tag_name: chaos-qt-${{ github.run_number }}.${{ github.run_attempt }}
              files: /opt/qt6.tar.gz
              fail_on_unmatched_files: true
